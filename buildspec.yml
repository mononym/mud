version: 0.2

env:
  variables:
    LANG: "en_US.UTF-8"
    LANGUAGE: "en_US:en"
    LC_ALL: "en_US.UTF-8"
    HOME: "/root"
    ELIXIR_VERSION: "1.9.1"
    MIX_ENV: "prod"
    PORT: 4000

phases:
  install:
    commands:
      - echo Entered the install phase...
      - apt-get update
      - apt-get install -y git
      - apt-get install -y build-essential git wget libssl-dev libreadline-dev libncurses5-dev zlib1g-dev m4 curl wx-common libwxgtk3.0-gtk3-dev autoconf
      - wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && dpkg -i erlang-solutions_1.0_all.deb
      - apt-get update
      - apt-get install -y esl-erlang
      - apt-get install -y elixir
      - mkdir ~/node-latest-install && cd $_ && \
      - curl --silent --location https://deb.nodesource.com/setup_10.x | bash -
      - apt-get install -y nodejs
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -;
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list;
      - apt-get update && apt-get install -y yarn;

  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - mix local.hex --force && mix local.rebar --force && mix hex.info
  build:
    commands:
      - echo Entered the build phase...
      - cd $CODEBUILD_SRC_DIR
      - cd server
      - mix deps.get
      - mix compile
      - echo Building assets
      - cd assets
      - yarn
      - yarn run deploy
      - cd ..
      - echo Build started on `date` in dir `pwd`
      - mix phx.digest
      - mix release
  post_build:
    commands:
      - echo Entered the post_build phase...
      - mix ecto.migrate
      - echo Build completed on `date`
artifacts:
  base-directory: _build/prod/rel/mud
  files:
    - "**/*"
